[{"C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\index.js":"1","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\App.js":"2","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\Chat.js":"3","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\Sidebar.js":"4","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\firebase.js":"5","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\SidebarChat.js":"6","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\Login.js":"7","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\theme.js":"8"},{"size":219,"mtime":1644382088268,"results":"9","hashOfConfig":"10"},{"size":1297,"mtime":1644398514711,"results":"11","hashOfConfig":"10"},{"size":4102,"mtime":1644385074100,"results":"12","hashOfConfig":"10"},{"size":2629,"mtime":1644398441002,"results":"13","hashOfConfig":"10"},{"size":702,"mtime":1644231863047,"results":"14","hashOfConfig":"10"},{"size":2169,"mtime":1644398024465,"results":"15","hashOfConfig":"10"},{"size":1688,"mtime":1644393264992,"results":"16","hashOfConfig":"10"},{"size":347,"mtime":1644391582668,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1hev3fd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\index.js",[],["39","40"],"C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\App.js",["41","42","43"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { db, auth, provider } from \"./firebase\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport Login from \"./Login\";\n\nfunction App() {\n  const [user, setUsers] = useState(JSON.parse(localStorage.getItem(\"user\")));\n  const [theme, setTheme] = useState(false);\n  // localStorage.setItem(\"theme\", JSON.stringify(theme));\n  const signOut = () => {\n    auth.signOut().then(() => {\n      localStorage.removeItem(\"user\");\n      setUsers(null);\n    });\n  };\n\n  useEffect(() => {\n    console.log(theme);\n  }, [theme]);\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login setUsers={setUsers} />\n      ) : (\n        <div className={theme ? \"app__body\" : \"app__body dark\"}>\n          <Router>\n            <Sidebar\n              signOut={signOut}\n              user={user}\n              theme={theme}\n              setTheme={setTheme}\n            />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\" component={null} />\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\Chat.js",["44","45"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Chat.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(null);\r\n  const [heeey, setSeed] = useState(\"\");\r\n  let { roomId } = useParams(); //imp imp\r\n  const [user, setUsers] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n  const photo = false;\r\n  const [roomName, setRoomName] = useState(\"Select Room\");\r\n  const [room, setRoom] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) =>\r\n          setRoom({\r\n            id: snapshot.data().id,\r\n            name: snapshot.data().name,\r\n            photo: snapshot.data().photo,\r\n          })\r\n        );\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n    setUsers(JSON.parse(localStorage.getItem(\"user\")));\r\n  }, []);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      context: input,\r\n      name: user.name,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    // setMessages(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        {room.photo ? (\r\n          <img src={room.photo} alt={user.name} id=\"photo\" />\r\n        ) : (\r\n          <Avatar src={`https://avatars.dicebear.com/api/human/${heeey}.svg`} />\r\n        )}\r\n\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{room.name}</h3>\r\n          <p>\r\n            {messages &&\r\n              new Date(\r\n                messages[messages.length - 1]?.timestamp?.toDate()\r\n              ).toUTCString()}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFileIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat__body\">\r\n        {messages &&\r\n          user &&\r\n          messages.map((message) => (\r\n            <p\r\n              className={`chat__message ${\r\n                message.name === user.name && \"chat__receiver\"\r\n              }`}\r\n              key={message.id}\r\n            >\r\n              {message.context}\r\n              <span className=\"chat__name\">{message.name}</span>\r\n              <span className=\"chat__timestamp\">\r\n                {message.timestamp &&\r\n                  new Date(message.timestamp.toDate()).toUTCString()}\r\n              </span>\r\n            </p>\r\n          ))}\r\n      </div>\r\n\r\n      <div className=\"chat__footer\">\r\n        <IconButton>\r\n          <InsertEmoticonIcon />\r\n        </IconButton>\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <IconButton>\r\n          <MicIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\Sidebar.js",["46","47","48","49","50"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Sidebar.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ToggleSwitch from \"@material-ui/core/Switch\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./firebase\";\r\n\r\nfunction Sidebar(props) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [rooms, setRooms] = useState([]);\r\n  let { roomId } = useParams(); //imp imp\r\n  const name = props.user.name;\r\n  const photo = props.user.photo;\r\n  const signOut = props.signOut;\r\n  const theme = localStorage.getItem(\"theme\");\r\n  const setTheme = props.setTheme;\r\n  useEffect(() => {\r\n    db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    ); //on any change in this snapshot run this code\r\n    console.log(rooms.data);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <IconButton onClick={signOut}>\r\n          {photo ? <img src={photo} alt={name} id=\"photo\" /> : <Avatar />}\r\n        </IconButton>\r\n        <div className=\"sidebar__headerRight\">\r\n          <ToggleSwitch value={theme} onClick={() => setTheme(!theme)} />\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          {/* <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton> */}\r\n          <IconButton>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__search\">\r\n        <div className=\"sidebar__searchContainer\">\r\n          <SearchIcon />\r\n          <input placeholder=\"Search\" text=\"text\" />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={\r\n          theme ? \"sidebar__chats\" : \"sidebar__chats darksidebar_chats\"\r\n        }\r\n      >\r\n        <SidebarChat addNewChat theme />\r\n        {rooms.map((room) => (\r\n          <SidebarChat\r\n            key={room.id}\r\n            id={room.id}\r\n            name={room.data.name}\r\n            photo={room.data.photo}\r\n            timeestamp={room.data.timestamp}\r\n            theme\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\firebase.js",[],"C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\SidebarChat.js",["51","52","53"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./SidebarChat.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat, photo, timestamp, theme }) {\r\n  const [heeey, setSeed] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [user, setUsers] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n    if (id) {\r\n      db.collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  const createChat = () => {\r\n    console.log(timestamp);\r\n    const roomName = prompt(\"Please enter name for chat\");\r\n\r\n    if (roomName) {\r\n      db.collection(\"rooms\").add({\r\n        name: roomName,\r\n        photo: user.photo,\r\n        createdBy: user.name,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    }\r\n  };\r\n\r\n  return !addNewChat ? ( //conditions in custom template\r\n    <Link\r\n      to={`/rooms/${id}`}\r\n      className={theme ? \"roomLink\" : \"roomLink darkroomLink\"}\r\n    >\r\n      <div className=\"sidebarChat\">\r\n        {photo ? (\r\n          <img src={photo} alt={name} id=\"photo\" />\r\n        ) : (\r\n          <Avatar src={`https://avatars.dicebear.com/api/human/${heeey}.svg`} />\r\n        )}\r\n\r\n        <div\r\n          className={\r\n            theme\r\n              ? \"sidebarChat__info\"\r\n              : \"sidebarChat__info darksidebarChat__info\"\r\n          }\r\n        >\r\n          <h3>{name}</h3>\r\n          <p>{timestamp}</p>\r\n          <p>Hii</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createChat} className=\"sidebarChat\">\r\n      <AddCircleOutlineIcon />\r\n      <div className=\"sidebarChat__info\">\r\n        <h3>Add New Room</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n","C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\Login.js",[],"C:\\Users\\Sandesh\\Desktop\\jswhatsapp\\whatsapp-clone\\src\\theme.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":50,"nodeType":"60","messageId":"61","endLine":2,"endColumn":54},{"ruleId":"58","severity":1,"message":"62","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":12},{"ruleId":"58","severity":1,"message":"63","line":3,"column":20,"nodeType":"60","messageId":"61","endLine":3,"endColumn":28},{"ruleId":"58","severity":1,"message":"64","line":19,"column":9,"nodeType":"60","messageId":"61","endLine":19,"endColumn":14},{"ruleId":"58","severity":1,"message":"65","line":20,"column":10,"nodeType":"60","messageId":"61","endLine":20,"endColumn":18},{"ruleId":"58","severity":1,"message":"66","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":20},{"ruleId":"58","severity":1,"message":"67","line":15,"column":10,"nodeType":"60","messageId":"61","endLine":15,"endColumn":18},{"ruleId":"58","severity":1,"message":"68","line":15,"column":20,"nodeType":"60","messageId":"61","endLine":15,"endColumn":31},{"ruleId":"58","severity":1,"message":"69","line":17,"column":9,"nodeType":"60","messageId":"61","endLine":17,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":33,"column":6,"nodeType":"72","endLine":33,"endColumn":8,"suggestions":"73"},{"ruleId":"58","severity":1,"message":"67","line":11,"column":10,"nodeType":"60","messageId":"61","endLine":11,"endColumn":18},{"ruleId":"58","severity":1,"message":"74","line":12,"column":16,"nodeType":"60","messageId":"61","endLine":12,"endColumn":24},{"ruleId":"70","severity":1,"message":"75","line":25,"column":6,"nodeType":"72","endLine":25,"endColumn":8,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'provider' is defined but never used.","'photo' is assigned a value but never used.","'roomName' is assigned a value but never used.","'MoreVertIcon' is defined but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'roomId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rooms.data'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'setUsers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [rooms.data]",{"range":"85","text":"86"},"Update the dependencies array to be: [id]",{"range":"87","text":"88"},[1221,1223],"[rooms.data]",[881,883],"[id]"]